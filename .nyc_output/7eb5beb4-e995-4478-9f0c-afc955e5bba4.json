{"/root/DSI/DSI_P08/src/Revista.ts":{"path":"/root/DSI/DSI_P08/src/Revista.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":13,"column":17},"end":{"line":13,"column":19}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":41}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"5":{"start":{"line":23,"column":8},"end":{"line":23,"column":49}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":33}},"7":{"start":{"line":35,"column":8},"end":{"line":35,"column":31}},"8":{"start":{"line":41,"column":8},"end":{"line":41,"column":37}},"9":{"start":{"line":46,"column":22},"end":{"line":46,"column":45}},"10":{"start":{"line":52,"column":8},"end":{"line":57,"column":9}},"11":{"start":{"line":53,"column":12},"end":{"line":53,"column":72}},"12":{"start":{"line":56,"column":12},"end":{"line":56,"column":43}},"13":{"start":{"line":64,"column":22},"end":{"line":64,"column":55}},"14":{"start":{"line":65,"column":8},"end":{"line":70,"column":9}},"15":{"start":{"line":66,"column":12},"end":{"line":66,"column":68}},"16":{"start":{"line":69,"column":12},"end":{"line":69,"column":45}},"17":{"start":{"line":76,"column":8},"end":{"line":76,"column":69}},"18":{"start":{"line":76,"column":46},"end":{"line":76,"column":67}},"19":{"start":{"line":83,"column":8},"end":{"line":83,"column":39}},"20":{"start":{"line":84,"column":8},"end":{"line":84,"column":58}},"21":{"start":{"line":85,"column":8},"end":{"line":85,"column":22}},"22":{"start":{"line":88,"column":0},"end":{"line":88,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":65},"end":{"line":24,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":22},"end":{"line":30,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":20},"end":{"line":36,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":26},"end":{"line":42,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":47}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":24},"end":{"line":58,"column":5}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":26},"end":{"line":71,"column":5}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":13},"end":{"line":77,"column":5}},"line":75},"8":{"name":"(anonymous_8)","decl":{"start":{"line":76,"column":32},"end":{"line":76,"column":33}},"loc":{"start":{"line":76,"column":46},"end":{"line":76,"column":67}},"line":76},"9":{"name":"(anonymous_9)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":30},"end":{"line":86,"column":5}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":42},"end":{"line":20,"column":63}},"type":"default-arg","locations":[{"start":{"line":20,"column":61},"end":{"line":20,"column":63}}],"line":20},"1":{"loc":{"start":{"line":52,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":57,"column":9}},{"start":{"line":52,"column":8},"end":{"line":57,"column":9}}],"line":52},"2":{"loc":{"start":{"line":65,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":70,"column":9}},{"start":{"line":65,"column":8},"end":{"line":70,"column":9}}],"line":65}},"s":{"0":1,"1":1,"2":5,"3":5,"4":5,"5":5,"6":2,"7":0,"8":2,"9":2,"10":6,"11":1,"12":5,"13":2,"14":2,"15":1,"16":1,"17":1,"18":2,"19":1,"20":1,"21":1,"22":1},"f":{"0":5,"1":2,"2":0,"3":2,"4":2,"5":6,"6":2,"7":1,"8":2,"9":1},"b":{"0":[5],"1":[1,5],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/root/DSI/DSI_P08/src/Revista.ts","sources":["/root/DSI/DSI_P08/src/Revista.ts"],"names":[],"mappings":";;;AAGA;;;;GAIG;AACH,MAAa,OAAO;IAUR;IACA;IACA;IAXF,UAAU,GAAe,EAAE,CAAC;IAEpC;;;;;OAKG;IACH,YACU,YAAoB,EACpB,UAAkB,EAClB,mBAA2B,EAAE;QAF7B,iBAAY,GAAZ,YAAY,CAAQ;QACpB,eAAU,GAAV,UAAU,CAAQ;QAClB,qBAAgB,GAAhB,gBAAgB,CAAa;IACpC,CAAC;IAEJ;;OAEG;IACH,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAE3C;;;OAGG;IACH,SAAS,CAAC,QAAkB;QAC1B,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC7D;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC;IACH,CAAC;IAED;;;OAGG;IACH,WAAW,CAAC,QAAkB;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED;;;OAGG;IACH,iBAAiB,CAAC,MAAc;QAC9B,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;CACF;AAlFD,0BAkFC","sourcesContent":["import { Observer } from './IObserver'\nimport { Observable } from './IObservable';\n\n/**\n * Clase Revista, sus instancias serán observadas por sus subscriptores\n * @class\n * @implements Interfaz Observable\n */\nexport class Revista implements Observable {\n  private _observers: Observer[] = [];\n\n  /**\n   * Constructor de la clase Revista\n   * @param _revistaName - Nombre de la revista\n   * @param _revistaID - ID de la revista\n   * @param _lastPublication - Última publicación añadida a la revista (por defecto es vacía)\n   */\n  constructor(\n    private _revistaName: string,\n    private _revistaID: number,\n    private _lastPublication: string = \"\"\n  ) {}\n\n  /**\n   * Retorna el nombre de la revista\n   */\n  get revistaName(): string {\n    return this._revistaName;\n  }\n\n  /**\n   * Retorna el ID de la revista\n   */\n  get revistaID(): number {\n    return this._revistaID;\n  }\n\n  /**\n   * Retorna la última publicación de la revista\n   */\n  get lastPublication(): string {\n    return this._lastPublication;\n  }\n  \n  /**\n   * Retorna el array con los subscriptores\n   */\n  get observers() { return this._observers; }\n\n  /**\n   * Método que permite añadir un subscriptor a la revista\n   * @param observer - Representa un subscriptor\n   */\n  subscribe(observer: Observer): void {\n    if (this._observers.includes(observer)) {\n      throw new Error(\"The observer had already been subscribed\");\n    } else {\n      this._observers.push(observer);\n    }\n  }\n\n  /**\n   * Método que permite eliminar un subscriptor de la revista\n   * @param observer - Representa un subscriptor\n   */\n  unsubscribe(observer: Observer): void {\n    const index = this._observers.indexOf(observer);\n    if (index === -1) {\n      throw new Error(\"The observer has not been subscribed\");\n    } else {\n      this._observers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Método que permite notificar a los subscriptores de una nueva publicación lanzada\n   */\n  notify(): void {\n    this._observers.forEach((observer) => observer.update(this));\n  }\n\n  /**\n   * Método que permite añadir una nueva publicación a la revista\n   * @param tittle\n   */\n  addNewPublication(tittle: string) {\n    this._lastPublication = tittle;\n    console.log(\"New publication has been published\");\n    this.notify();\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"77ada2a00c82a39312d53e729ddebd7c8e33cc1e","contentHash":"0d949f9ad9e23ee232c70e5089dea6f9e52dd8375a6662759bb25934bea5492b"},"/root/DSI/DSI_P08/src/Subscriptor.ts":{"path":"/root/DSI/DSI_P08/src/Subscriptor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":13,"column":16},"end":{"line":13,"column":21}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":35}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"6":{"start":{"line":26,"column":21},"end":{"line":26,"column":43}},"7":{"start":{"line":30,"column":19},"end":{"line":30,"column":39}},"8":{"start":{"line":34,"column":21},"end":{"line":34,"column":43}},"9":{"start":{"line":41,"column":8},"end":{"line":41,"column":30}},"10":{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":88}},"12":{"start":{"line":50,"column":0},"end":{"line":50,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":36},"end":{"line":22,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":19},"end":{"line":26,"column":45}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":41}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":19},"end":{"line":34,"column":45}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":23},"end":{"line":48,"column":5}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},{"start":{"line":42,"column":8},"end":{"line":47,"column":9}}],"line":42}},"s":{"0":1,"1":1,"2":1,"3":6,"4":6,"5":6,"6":0,"7":0,"8":2,"9":2,"10":2,"11":2,"12":1},"f":{"0":6,"1":0,"2":0,"3":2,"4":2},"b":{"0":[2,0]},"inputSourceMap":{"version":3,"file":"/root/DSI/DSI_P08/src/Subscriptor.ts","sources":["/root/DSI/DSI_P08/src/Subscriptor.ts"],"names":[],"mappings":";;;AAAA,uCAAmC;AAInC;;;;GAIG;AACH,MAAa,WAAW;IAOF;IAA2B;IANvC,SAAS,GAAY,KAAK,CAAC;IACnC;;;;OAIG;IACH,YAAoB,SAAiB,EAAU,OAAe;QAA1C,cAAS,GAAT,SAAS,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;IAElE;;OAEG;IACH,IAAI,QAAQ,KAAa,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAEjD;;OAEG;IACH,IAAI,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAE7C;;OAEG;IACH,IAAI,QAAQ,KAAc,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAElD;;;;OAIG;IACH,MAAM,CAAC,UAAsB;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,UAAU,YAAY,iBAAO,EAAE;YACjC,OAAO,CAAC,GAAG,CACT,6BAA6B,IAAI,CAAC,SAAS,GAAG;gBAC5C,YAAY,IAAI,CAAC,OAAO,GAAG;gBAC3B,oCAAoC,UAAU,CAAC,WAAW,GAAG;gBAC7D,0CAA0C,UAAU,CAAC,eAAe,EAAE,CACzE,CAAC;SACH;IACH,CAAC;CACF;AAxCD,kCAwCC","sourcesContent":["import { Revista } from './Revista'\nimport { Observable } from './IObservable';\nimport { Observer } from './IObserver';\n\n/**\n * Clase Subscriptor, representa un usuario subscriptor\n * @class\n * @implements Interfaz Observer\n */\nexport class Subscriptor implements Observer {\n  private _notified: boolean = false;\n  /**\n   * Constructor de la clase Subscriptor\n   * @param _subsName - Representa el nombre del subscriptor\n   * @param _subsID - Representa el ID del subscriptor\n   */\n  constructor(private _subsName: string, private _subsID: number) {}\n  \n  /**\n   * Retorna el nombre del subscriptor\n   */\n  get subsName(): string { return this._subsName; }\n\n  /**\n   * Retorna el ID del subscriptor\n   */\n  get subsID(): number { return this._subsID; }\n  \n  /**\n   * Retorna la variable bool que indica si el subscriptor fue notificado\n   */\n  get notified(): boolean { return this._notified; }\n\n  /**\n   * Método que permite actualizar el estado del subscriptor tras recibir\n   * una llamada de la Subscripción\n   * @param observable - Representa un objeto al que está subscrito\n   */\n  update(observable: Observable): void {\n    this._notified = true;\n    if (observable instanceof Revista) {\n      console.log(\n        `I am a Subscriptor called ${this._subsName} ` +\n          `with ID: ${this._subsID} ` +\n          `and I have observed that Revista ${observable.revistaName} ` +\n          `has published a new Publication called ${observable.lastPublication}`\n      );\n    }\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"150437e9bc5c6c1024ce301534834d3833f03cc1","contentHash":"19ed59028b18a27b73c92a4b8630f1a7a0030f7c5b7d9d13757df1b48536b9ed"}}